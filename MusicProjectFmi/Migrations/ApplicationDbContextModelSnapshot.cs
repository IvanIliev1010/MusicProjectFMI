// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicProjectFmi.Data;

namespace MusicProjectFmi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicProjectFmi.Data.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerformerId")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Elv1s",
                            PerformerId = 2,
                            Year = 2002
                        },
                        new
                        {
                            Id = 2,
                            Name = "Back in Black",
                            PerformerId = 3,
                            Year = 1982
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ледено момиче",
                            PerformerId = 4,
                            Year = 2000
                        },
                        new
                        {
                            Id = 4,
                            Name = "Дяволско желание",
                            PerformerId = 5,
                            Year = 2000
                        },
                        new
                        {
                            Id = 5,
                            Name = "null",
                            PerformerId = 6,
                            Year = 0
                        });
                });

            modelBuilder.Entity("MusicProjectFmi.Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Popular music",
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Very emotional music",
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Very cheap music",
                            Name = "Chalga"
                        });
                });

            modelBuilder.Entity("MusicProjectFmi.Data.Models.MyPlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.ToTable("MyPlaylists");
                });

            modelBuilder.Entity("MusicProjectFmi.Data.Models.Performer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Веселин Маринов"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Elvis Presley"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ad/Dc"
                        },
                        new
                        {
                            Id = 4,
                            Name = "D2"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Преслава"
                        },
                        new
                        {
                            Id = 6,
                            Name = "null"
                        });
                });

            modelBuilder.Entity("MusicProjectFmi.Data.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 3,
                            GenreId = 1,
                            Name = "Ледено Момиче",
                            Year = 2000
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 3,
                            GenreId = 1,
                            Name = "Две следи",
                            Year = 2000
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 3,
                            GenreId = 1,
                            Name = "Не мога да спра да те обичам",
                            Year = 2000
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 1,
                            GenreId = 2,
                            Name = "Hound Dog",
                            Year = 1956
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 1,
                            GenreId = 2,
                            Name = "Heartbreak Hotel",
                            Year = 1968
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 1,
                            GenreId = 2,
                            Name = "Dont't be Cruel",
                            Year = 1965
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 2,
                            GenreId = 2,
                            Name = "Back in Black",
                            Year = 1980
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 2,
                            GenreId = 2,
                            Name = "Shoot to thrill",
                            Year = 1981
                        },
                        new
                        {
                            Id = 9,
                            AlbumId = 2,
                            GenreId = 2,
                            Name = "Hells Bells",
                            Year = 1982
                        },
                        new
                        {
                            Id = 10,
                            AlbumId = 4,
                            GenreId = 3,
                            Name = "Финални думи",
                            Year = 2003
                        },
                        new
                        {
                            Id = 11,
                            AlbumId = 4,
                            GenreId = 3,
                            Name = "Нямам право",
                            Year = 2004
                        },
                        new
                        {
                            Id = 12,
                            AlbumId = 4,
                            GenreId = 3,
                            Name = "Дяволско желание",
                            Year = 2004
                        });
                });

            modelBuilder.Entity("MusicProjectFmi.Data.Models.SongPerformer", b =>
                {
                    b.Property<int>("PerformerId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("PerformerId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("SongsPerformers");

                    b.HasData(
                        new
                        {
                            PerformerId = 4,
                            SongId = 1
                        },
                        new
                        {
                            PerformerId = 4,
                            SongId = 2
                        },
                        new
                        {
                            PerformerId = 4,
                            SongId = 3
                        },
                        new
                        {
                            PerformerId = 2,
                            SongId = 4
                        },
                        new
                        {
                            PerformerId = 2,
                            SongId = 5
                        },
                        new
                        {
                            PerformerId = 2,
                            SongId = 6
                        },
                        new
                        {
                            PerformerId = 3,
                            SongId = 7
                        },
                        new
                        {
                            PerformerId = 3,
                            SongId = 8
                        },
                        new
                        {
                            PerformerId = 3,
                            SongId = 9
                        },
                        new
                        {
                            PerformerId = 5,
                            SongId = 10
                        },
                        new
                        {
                            PerformerId = 5,
                            SongId = 11
                        },
                        new
                        {
                            PerformerId = 5,
                            SongId = 12
                        });
                });

            modelBuilder.Entity("MusicProjectFmi.Data.Models.MyPlaylist", b =>
                {
                    b.HasOne("MusicProjectFmi.Data.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicProjectFmi.Data.Models.Song", b =>
                {
                    b.HasOne("MusicProjectFmi.Data.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId");

                    b.HasOne("MusicProjectFmi.Data.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicProjectFmi.Data.Models.SongPerformer", b =>
                {
                    b.HasOne("MusicProjectFmi.Data.Models.Performer", "Performer")
                        .WithMany("SongPerformer")
                        .HasForeignKey("PerformerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicProjectFmi.Data.Models.Song", "Song")
                        .WithMany("SongPerformer")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
